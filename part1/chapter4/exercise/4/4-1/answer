a.T(n) = 2T(n/2) + n^4
主方法,O(n^4)

b.T(n) = T(7n/10) + n
主方法,O(n)

c.T(n) = 16T(n/4) + n^2
主方法,O(n^2lgn)

d.T(n) = 7T(n/3) + n^2
主方法,O(n^2)

e.T(n) = 7T(n/2) + n^2
主方法,O(n^(lg7/lg2))

f.T(n) = 2T(n/4) + n^(1/2)
主方法,O(n^(1/2)lgn)

g.T(n) = T(n-2) + n^2
递归树,O(n^3)
第i层单个复杂度为(n-2i)^2,每层只有一个，
令(n-2i)^2 = 1,则共有（n-1)/2+1层，
所以T(n) = ...
	 = O(n^3)

